/**
 * This class performs image-related services
 *
 * Created by naelin on 2/18/17.
 *
 */

import '../client'
import request from 'superagent';

/**
 * Sends the uploaded image file to the server to be uploaded to S3
 *
 * @param file The uploaded image
 * @param callback Takes the image's key as a parameter on success
 */
function upload(file, callback) {
    return request.post('images/s3/upload')
        .attach('imageFile', file)
        .set('Accept', 'application/json')
        .end((err, res) => {
            if (err) console.log(err);
            else {
                alert('File uploaded!');
                var imageKey = res.text
                callback(imageKey)
            }
        })
}

/**
 * Sends the uploaded image's key to S3 to grab image to be used for
 * label detection
 *
 * @param imageKey
 * @param callback
 */
function detectLabels(imageKey, callback) {
    request.get('images/detect')
        .query({imageKey: imageKey})
        .end(function (err, res) {
            if (err) console.log(err);
            else {
                var labels = res.text
                callback(labels)
            }
        })
}

/**
 * Stores the image's title, description, and labels to Firebase database
 * using image key as ID, generated by S3 upon image upload
 *
 * @param imageKey ID generated by S3 when user uploaded image
 * @param title Title of image
 * @param description Description of image
 * @param labels Generated labels detected by Amazon Rekognition
 */
function storeImageMeta(imageKey, title, description, labels) {
    request.get('images/fb/store/')
        .query({imageKey: imageKey})
        .query({title: title})
        .query({description: description})
        .query({labels: labels})
        .end((err, res) => {
            if (err) {
                console.log(err + res.text);
                deleteImage(imageKey);
            }
            else {
                console.log(res)
            }
        })
}

function deleteImage(imageKey) {
    request.get('images/s3/delete').query({imageKey: imageKey}).end((err, res) => {
        if(err) {
            console.log(err + res.text);
        }
        else {
            console.log(res)
        }
    })
}

function search(searchTerm, callback) {
    request.get('images/search').query({searchTerm: searchTerm}).end((err, res) => {
        if(err) {
            console.log(err + res);
        }
        else {
            callback(res.text)
        }
    })

}

const ImageService = {upload, detectLabels, storeImageMeta, deleteImage, search};
export default ImageService;