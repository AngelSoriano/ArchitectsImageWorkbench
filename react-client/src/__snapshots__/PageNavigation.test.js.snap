exports[`class PageNavigation extends /* istanbul ignore next */_react.Component {
    constructor(props) {
        super(props);
        this.state = { activePage: 1 };
    }
    render() {
        return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'PageNavigation', __source: { fileName: _jsxFileName, lineNumber: 14 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactBootstrap.Pagination, /* istanbul ignore next */{
                    prev: /* istanbul ignore next */true,
                    next: /* istanbul ignore next */true,
                    first: /* istanbul ignore next */true,
                    last: /* istanbul ignore next */true,
                    ellipsis: /* istanbul ignore next */true,
                    boundaryLinks: /* istanbul ignore next */true,
                    items: 20,
                    maxButtons: 5,
                    activePage: this.state.activePage,
                    onSelect: this.handleSelect.bind(this), __source: { fileName: _jsxFileName, lineNumber: 15 }, __self: this })));


    }
    handleSelect(eventKey) {
        console.log(\`active page is \${eventKey}\`);
        this.setState({ activePage: eventKey });
    }} renders and matches our snapshot 1`] = `
<div
  className="PageNavigation">
  <ul
    className="pagination">
    <li
      className="disabled"
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button"
        style={
          Object {
            "pointerEvents": "none",
          }
        }
        tabIndex={-1}>
        <span
          aria-label="First">
          «
        </span>
      </a>
    </li>
    <li
      className="disabled"
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button"
        style={
          Object {
            "pointerEvents": "none",
          }
        }
        tabIndex={-1}>
        <span
          aria-label="Previous">
          ‹
        </span>
      </a>
    </li>
    <li
      className="active"
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        1
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        2
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        3
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        4
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        5
      </a>
    </li>
    <li
      className="disabled"
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button"
        style={
          Object {
            "pointerEvents": "none",
          }
        }
        tabIndex={-1}>
        <span
          aria-label="More">
          …
        </span>
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        20
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        <span
          aria-label="Next">
          ›
        </span>
      </a>
    </li>
    <li
      className=""
      style={undefined}>
      <a
        href="#"
        onClick={[Function]}
        role="button">
        <span
          aria-label="Last">
          »
        </span>
      </a>
    </li>
  </ul>
</div>
`;
